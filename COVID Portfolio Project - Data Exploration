SELECT location, date, total_cases, new_cases, total_deaths, population
 FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
 ORDER BY 1,2

 -- Total Cases vs Total Deaths
 -- Shows likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage
 FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
 WHERE location = 'United States'
 ORDER BY 1,2

 --Total Cases vs Population
 -- Shows what percentage of population got Covid

 SELECT location, date, total_cases, population, (total_cases/population)*100 AS PercentPopulationInfected
 FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
 ORDER BY 1,2

 -- Countries with Highest Infection Rate compared to Population

SELECT Location, Population, MAX(total_cases) AS HighestInfectionCount, MAX((total_cases/population))*100 AS PercentPopulationInfected 
 FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
 GROUP BY Location, Population
 ORDER BY PercentPopulationInfected DESC

 -- Countries with Highest Death Count per Population

SELECT Location, MAX(total_deaths) AS TotalDeathCount
 FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
 WHERE continent is not null 
 GROUP BY Location
 ORDER BY TotalDeathCount DESC 

-- BREAKING THINGS DOWN BY CONTINENT
-- Showing contintents with the highest death count per population

SELECT continent, MAX(Total_deaths) AS TotalDeathCount
 FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
WHERE continent is not null 
GROUP BY continent
ORDER BY TotalDeathCount DESC

-- GLOBAL NUMBERS

Select date, SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(New_Cases)*100 AS DeathPercentage
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
WHERE continent is not null 
GROUP BY date
 ORDER BY 1,2

 Select SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(new_deaths)/SUM(New_Cases)*100 AS DeathPercentage
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths`
WHERE continent is not null 
 ORDER BY 1,2

-- Join Tables

SELECT *
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths` AS dea
JOIN `upbeat-legacy-403118.PortfolioProject.CovidVaccinations` AS vac
  ON dea.location = vac.location
  and dea.date = vac.date

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths` AS dea
JOIN `upbeat-legacy-403118.PortfolioProject.CovidVaccinations` AS vac
  ON dea.location = vac.location
  and dea.date = vac.date
  WHERE dea.continent is not null 
  ORDER BY 2,3

  -- Total Population vs Vaccinations Rolling Sum

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths` AS dea
JOIN `upbeat-legacy-403118.PortfolioProject.CovidVaccinations` AS vac
  ON dea.location = vac.location
  and dea.date = vac.date
  WHERE dea.continent is not null 
  ORDER BY 2,3

-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac AS
(SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths` AS dea
JOIN `upbeat-legacy-403118.PortfolioProject.CovidVaccinations` AS vac
ON dea.location = vac.location
  and dea.date = vac.date
  WHERE dea.continent is not null)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths` AS dea
JOIN `upbeat-legacy-403118.PortfolioProject.CovidVaccinations` AS vac
	ON dea.location = vac.location
	and dea.date = vac.date

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated

-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations as int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
FROM `upbeat-legacy-403118.PortfolioProject.CovidDeaths` AS dea
JOIN `upbeat-legacy-403118.PortfolioProject.CovidVaccinations` AS vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
