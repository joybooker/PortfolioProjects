-- Cleaning Data in SQL Queries

SELECT *
 FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`

 -- Change Date Format

 SELECT SaleDate CONVERT(Date,SaleDate)
 FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`

 Update NashvilleHousing
SET SaleDate = CONVERT(Date,SaleDate)

-- Populate Property Address Data

SELECT *
 FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`
 -- WHERE ProperyAddress is null
ORDER BY ParcelID

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, (IFNULL(a.PropertyAddress, b.PropertyAddress))
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing` a
JOIN `upbeat-legacy-403118.PortfolioProject.NashvilleHousing` b
ON a.ParcelID = b.ParcelID
	AND a.UniqueID_ <> b.UniqueID_
WHERE a.PropertyAddress is null

UPDATE a 
SET PropertyAddress = (IFNULL(a.PropertyAddress, b.PropertyAddress))
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing` a
JOIN `upbeat-legacy-403118.PortfolioProject.NashvilleHousing` b
WHERE a.PropertyAddress is null

-- Breaking out Address into Individual Columns (Address, City, State)

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) AS Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) AS Address

FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`


ALTER TABLE NashvilleHousing
ADD PropertySplitAddress Nvarchar(255);

UPDATE NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )


ALTER TABLE NashvilleHousing
ADD PropertySplitCity Nvarchar(255);

UPDATE NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))

SELECT *
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`


SELECT OwnerAddress
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`
WHERE OwnerAddress is not null

SELECT
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`

ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE NashvilleHousing
ADD OwnerSplitCity Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)


ALTER TABLE NashvilleHousing
ADD OwnerSplitState Nvarchar(255);

UPDATE NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)


SELECT *
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`


-- Change Y and N to Yes and No in "Sold as Vacant" field

SELECT DISTINCT SoldAsVacant
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`

SELECT SoldAsVacant,
CASE WHEN SoldAsVacant = "Y" THEN "Yes"
WHEN SoldAsVacant = "N" THEN "No"
ELSE SoldAsVacant
END
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`

UPDATE NashvilleHousing
SET SoldAsVacant = CASE WHEN SoldAsVacant = "Y" THEN "Yes"
WHEN SoldAsVacant = "N" THEN "No"
ELSE SoldAsVacant
END

-- Remove Duplicates

WITH RowNumCTE AS(
SELECT *,
ROW_NUMBER() OVER (
	PARTITION BY ParcelID,PropertyAddress,SalePrice,SaleDate,LegalReference
		ORDER BY UniqueID_) row_num
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`
)

DELETE
FROM RowNumCTE
WHERE row_num > 1


-- Delete Unused Columns

SELECT *
FROM `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`


ALTER TABLE `upbeat-legacy-403118.PortfolioProject.NashvilleHousing`
DROP COLUMN OwnerAddress, TaxDistrict, Acreage
